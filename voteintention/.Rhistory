points(allegh2016polls_spdf_pt$longitude_poll,allegh2016polls_spdf_pt$latitude_poll,pch=16,
cex=log(allegh2016polls_spdf_pt$poll_planned_count/1000),
col=alpha(allegh2016polls_spdf_pt$color_nonwhite,0.8))
legend("bottomleft",legend = c("< 20%", "20 - 40%", "40 - 60%", "60 - 80%", "80%+"),
fill=medsl_blues, title="Non-white %", cex=0.8, xpd=TRUE,bty="n",ncol=1)
###now closed
plot(allegh_cbg,main="Allegheny Polls for 2020 Primary",border="light gray")
points(allegh2020polls_spdf_pt$longitude_poll,allegh2020polls_spdf_pt$latitude_poll,pch=16,
cex=log(allegh2020polls_spdf_pt$poll_opened_count/1000),
col=alpha(allegh2020polls_spdf_pt$color_nonwhite,0.8))
legend("bottomleft",legend = c("< 20%", "20 - 40%", "40 - 60%", "60 - 80%", "80%+"),
fill=medsl_blues, title="Non-white %", cex=0.8, xpd=TRUE,bty="n",ncol=1)
setwd("C:/Users/johna/Dropbox (Curiel Analytx)/Healthy_Elections/States/PA/distance_analysis/plots")
jpeg("philadelphia_poll_size_map.jpeg", res=500,height = 12, width=18, units="in")
par(mfrow=c(1,2))
plot(phillie_cbg,main="Philadelphia Polls for 2016 Primary",border="light gray")
points(phillie2016polls_spdf_pt$longitude_poll,phillie2016polls_spdf_pt$latitude_poll,pch=16,
cex=log(phillie2016polls_spdf_pt$poll_planned_count/1000),
col=alpha(phillie2016polls_spdf_pt$color_nonwhite,0.8))
legend("bottomleft",legend = c("< 20%", "20 - 40%", "40 - 60%", "60 - 80%", "80%+"),
fill=medsl_blues, title="Non-white %", cex=0.8, xpd=TRUE,bty="n",ncol=1)
###now closed
plot(phillie_cbg,main="Philadelphia Polls for 2020 Primary",border="light gray")
points(phillie2020polls_spdf_pt$longitude_poll,phillie2020polls_spdf_pt$latitude_poll,pch=16,
cex=log(phillie2020polls_spdf_pt$poll_opened_count/1000),
col=alpha(phillie2020polls_spdf_pt$color_nonwhite,0.8))
legend("bottomleft",legend = c("< 20%", "20 - 40%", "40 - 60%", "60 - 80%", "80%+"),
fill=medsl_blues, title="Non-white %", cex=0.8, xpd=TRUE,bty="n",ncol=1)
dev.off()
#####allegheny here
jpeg("allegh_poll_size_map.jpeg", res=500,height = 12, width=18, units="in")
par(mfrow=c(1,2))
plot(allegh_cbg,main="Allegheny Polls for 2016 Primary",border="light gray")
points(allegh2016polls_spdf_pt$longitude_poll,allegh2016polls_spdf_pt$latitude_poll,pch=16,
cex=log(allegh2016polls_spdf_pt$poll_planned_count/1000),
col=alpha(allegh2016polls_spdf_pt$color_nonwhite,0.8))
legend("bottomleft",legend = c("< 20%", "20 - 40%", "40 - 60%", "60 - 80%", "80%+"),
fill=medsl_blues, title="Non-white %", cex=0.8, xpd=TRUE,bty="n",ncol=1)
###now closed
plot(allegh_cbg,main="Allegheny Polls for 2020 Primary",border="light gray")
points(allegh2020polls_spdf_pt$longitude_poll,allegh2020polls_spdf_pt$latitude_poll,pch=16,
cex=log(allegh2020polls_spdf_pt$poll_opened_count/1000),
col=alpha(allegh2020polls_spdf_pt$color_nonwhite,0.8))
legend("bottomleft",legend = c("< 20%", "20 - 40%", "40 - 60%", "60 - 80%", "80%+"),
fill=medsl_blues, title="Non-white %", cex=0.8, xpd=TRUE,bty="n",ncol=1)
dev.off()
####ok, let's go with the models now ; will need to exclude race for now
phillie_vf2b <- subset(phillie_vf2,`Voter status`=="A" )
set.seed(1337)
#phillie_vf2b
phillie_vf2b <- sample_frac(phillie_vf2b, frac=0.5)
names(phillie_vf2b)
phillie_voter_model <- glm(voted2020 ~  dist_chg  + poll_size_chg1000 + pred.whi+ dem  + gop +
elec_count + as.factor(full_addr_open) , data=phillie_vf2b,
family=binomial(link="logit"))
summary(phillie_voter_model)
##now for allegheny
allegh_vf2b <- subset(allegh_vf2,`Voter status`=="A" )
set.seed(1337)
#allegh_vf2b
allegh_vf2b <- sample_frac(allegh_vf2b, frac=0.5)
allegh_voter_model <- glm(voted2020 ~  dist_chg  + poll_size_chg1000 + pred.whi+ dem  + gop +
elec_count + as.factor(full_addr_open) , data=allegh_vf2b,
family=binomial(link="logit"))
##now for allegheny
allegh_vf2$dem <- 0
sort(unique(allegh_vf2$Party))
##now for allegheny
allegh_vf2$dem <- 0
allegh_vf2$dem[allegh_vf2$Party=='D'] <- 1
allegh_vf2$gop <- 0
allegh_vf2$gop <- 0
allegh_vf2$gop[allegh_vf2$Party=="R"] <- 1
allegh_vf2b <- subset(allegh_vf2,`Voter status`=="A" )
set.seed(1337)
#allegh_vf2b
allegh_vf2b <- sample_frac(allegh_vf2b, frac=0.5)
allegh_voter_model <- glm(voted2020 ~  dist_chg  + poll_size_chg1000 + pred.whi+ dem  + gop +
elec_count + as.factor(full_addr_open) , data=allegh_vf2b,
family=binomial(link="logit"))
names(allegh_vf)
###rad in voterfile
allegh_vf<- fread("C:/Users/johna/Dropbox (Curiel Analytx)/voterfile/pa_folder/ALLEGHENY FVE 20200706.txt")
class(allegh_vf)
allegh_vf <- as.data.frame(allegh_vf)
allegh_vf$voted2020 <- 0
allegh_vf$voted2020[allegh_vf$V88!=""] <- 1
summary(allegh_vf$voted2020)
###now for allegh in 2 stages
allegh_vf$elec_count <- 0
for (i in 75:87) {
allegh_vf$temp_count <- 0
allegh_vf$temp_count[allegh_vf[,i]!=""] <- 1
allegh_vf$elec_count <- allegh_vf$elec_count + allegh_vf$temp_count
}
for (i in 89:150) {
allegh_vf$temp_count <- 0
allegh_vf$temp_count[allegh_vf[,i]!=""] <- 1
allegh_vf$elec_count <- allegh_vf$elec_count + allegh_vf$temp_count
}
summary(phillie_vf$elec_count)
summary(allegh_vf$elec_count)
names(allegh_vf)
colnames(allegh_vf)[1:29] <- col_names_vf
names(allegh_vf)
allegh_vf <- allegh_vf[,c(1:29,154,155)]
names(allegh_vf)
allegh_vf <- allegh_vf[,-c(2,5:6,14,17,21:25,29)]
names(allegh_vf)
####now let's create vars of : age and full address
allegh_vf$byear <- substrRight(allegh_vf$Birthdate,4)
allegh_vf$county <- "allegheny"
allegh_vf$address <- paste0(allegh_vf$`House number`, sep=" ", allegh_vf$Street, sep=", ", allegh_vf$City,
sep=", ", "PA", sep=" ", allegh_vf$`ZIP Code`)
#### now doing allegheny
allegh_vf2 <- merge(allegh_vf, allegh_all, by = "address", all.x=T, all.y=F)
allegh_vf2$dum=1
#allegh_vf3 <- allegh_vf2 %>% group_by(`ID number`) %>% summarise(count=sum(dum))
allegh_vf2 <- allegh_vf2[!duplicated(allegh_vf2$`ID number`), ]
sum(is.na(allegh_vf2$dist_chg))# 35726 missing; will fix later
allegh_vf2 <- subset(allegh_vf2, is.na(dist_chg)==F)
names(allegh_vf2)
saveRDS(allegh_vf2, "allegh_vf2merged.rds")
####
#now we want to find out the groupings
names(phillie_vf2)
allegh_vf2$age <- 2020 - as.numeric(allegh_vf2$byear)
allegh_vf2$planned_latlong <- paste0(allegh_vf2$latitude_poll,sep=" ",allegh_vf2$longitude_poll)
length(unique(allegh_vf2$planned_latlong))
length(unique(allegh_vf2$poll_latlong))
allegh_vf2 <- allegh_vf2 %>% group_by(planned_latlong) %>% mutate(poll_planned_count=sum(dum,na.rm=T))
allegh_vf2 <- allegh_vf2 %>% group_by(poll_latlong) %>% mutate(poll_opened_count=sum(dum,na.rm=T))
###now for count chg per 1000
allegh_vf2$poll_size_chg1000 <- (allegh_vf2$poll_opened_count-allegh_vf2$poll_planned_count)/1000
summary(allegh_vf2$poll_size_chg1000)
allegh_vf2 <- merge(allegh_vf2,bisg_allegh,by.x="ID number",by.y="id",all.x=T,all.y=F)
allegh_vf2$pred.nonwhi <- 1 - allegh_vf2$pred.whi
allegh_vf2 <- allegh_vf2 %>% group_by(planned_latlong) %>% mutate(poll_planned_nonwhite=sum(pred.nonwhi,na.rm=T))
allegh_vf2 <- allegh_vf2 %>% group_by(poll_latlong) %>% mutate(poll_opened_nonwhite=sum(pred.nonwhi,na.rm=T))
allegh_vf2$poll_planned_nonwhite_pct <- (allegh_vf2$poll_planned_nonwhite/allegh_vf2$poll_planned_count)*100
allegh_vf2$poll_opened_nonwhite_pct <- (allegh_vf2$poll_opened_nonwhite/allegh_vf2$poll_opened_count)*100
sum(is.na(allegh_vf2$pred.whi))
##now for allegheny
allegh_vf2$dem <- 0
allegh_vf2$dem[allegh_vf2$Party=='D'] <- 1
allegh_vf2$gop <- 0
allegh_vf2$gop[allegh_vf2$Party=="R"] <- 1
allegh_vf2b <- subset(allegh_vf2,`Voter status`=="A" )
set.seed(1337)
#allegh_vf2b
allegh_vf2b <- sample_frac(allegh_vf2b, frac=0.5)
allegh_voter_model <- glm(voted2020 ~  dist_chg  + poll_size_chg1000 + pred.whi+ dem  + gop +
elec_count + as.factor(full_addr_open) , data=allegh_vf2b,
family=binomial(link="logit"))
names(allegh_vf2b)
allegh_voter_model <- glm(voted2020 ~  dist_chg  + poll_size_chg1000 + pred.whi+ dem  + gop +
elec_count + as.factor(poll_latlong) , data=allegh_vf2b,
family=binomial(link="logit"))
summary(allegh_voter_model)
null_phillie_model_fe <- glm(voted2020 ~  1 + as.factor(full_addr_open) , data=phillie_vf2b,
family=binomial(link="logit"))
null_phille_model <- glm(voted2020 ~  1  , data=phillie_vf2b,
family=binomial(link="logit"))
###getting mcFadden
mcfadden_fe_phillie <- 1- (logLik(phillie_voter_model)/logLik(null_phillie_model_fe))
mcfadden_null_phillie <- 1- (logLik(phillie_voter_model)/logLik(null_phille_model))
mcfadden_fe <- as.character(round(mcfadden_fe_phillie,3))
mcfadden_null <- as.character(round(mcfadden_null_phillie,3))
##now allegheny
null_allegh_model_fe <- glm(voted2020 ~  1 + as.factor(poll_latlong) , data=allegh_vf2b,
family=binomial(link="logit"))
null_phille_model <- glm(voted2020 ~  1  , data=allegh_vf2b,
family=binomial(link="logit"))
###getting mcFadden
mcfadden_fe_allegh <- 1- (logLik(allegh_voter_model)/logLik(null_allegh_model_fe))
mcfadden_null_allegh <- 1- (logLik(allegh_voter_model)/logLik(null_phille_model))
mcfadden_null_allegh <- 1- (logLik(allegh_voter_model)/logLik(null_phille_model))
mcfadden_fe_allegh <- as.character(round(mcfadden_fe_allegh,3))
mcfadden_null_allegh <- as.character(round(mcfadden_null_allegh,3))
getwd()
###Let's go onto stargazer now
setwd("C:/Users/johna/Dropbox (Curiel Analytx)/Healthy_Elections/States/PA/distance_analysis/models")
summary()
summary(allegh_voter_model)
pa_starg_vote <- stargazer::stargazer(list(phillie_voter_model,allegh_voter_model),type="html",
out="stargazer_pa_vote_model.html",
covariate.labels = c("Dist. Chg.","Poll Size Chg. (per 1,000)","Prob. White",
"Democrat","Republican", "Prior Elec. #"),
intercept.bottom = T,column.labels = " ",ci=T,no.space = T,
single.row = F, omit=c("full_addr_open" ,"poll_latlong"),
add.lines = list(c("Fixed Effects","Yes","Yes"),
c("Total R-squared",mcfadden_null_phillie,mcfadden_null_allegh),
c("Within R-squared",mcfadden_fe_phillie,mcfadden_fe_allegh)),
dep.var.labels=c("Philadelphia","Allegheny"),align = T)
mcfadden_fe <- as.character(round(mcfadden_fe_phillie,3))
mcfadden_null <- as.character(round(mcfadden_null_phillie,3))
pa_starg_vote <- stargazer::stargazer(list(phillie_voter_model,allegh_voter_model),type="html",
out="stargazer_pa_vote_model.html",
covariate.labels = c("Dist. Chg.","Poll Size Chg. (per 1,000)","Prob. White",
"Democrat","Republican", "Prior Elec. #"),
intercept.bottom = T,column.labels = " ",ci=T,no.space = T,
single.row = F, omit=c("full_addr_open" ,"poll_latlong"),
add.lines = list(c("Fixed Effects","Yes","Yes"),
c("Total R-squared",mcfadden_null_phillie,mcfadden_null_allegh),
c("Within R-squared",mcfadden_fe_phillie,mcfadden_fe_allegh)),
dep.var.labels=c("Philadelphia","Allegheny"),align = T)
mcfadden_null_phillie
round(mcfadden_null_phillie,3)
as.character(round(mcfadden_null_phillie,3))
pa_starg_vote <- stargazer::stargazer(list(phillie_voter_model,allegh_voter_model),type="html",
out="stargazer_pa_vote_model.html",
covariate.labels = c("Dist. Chg.","Poll Size Chg. (per 1,000)","Prob. White",
"Democrat","Republican", "Prior Elec. #"),
intercept.bottom = T,column.labels = " ",ci=T,no.space = T,
single.row = F, omit=c("full_addr_open" ,"poll_latlong"),
add.lines = list(c("Fixed Effects","Yes","Yes"),
c("Total R-squared",mcfadden_null,mcfadden_null_allegh),
c("Within R-squared",mcfadden_fe,mcfadden_fe_allegh)),
dep.var.labels=c("Philadelphia","Allegheny"),align = T)
setwd("C:/Users/johna/Dropbox (Curiel Analytx)/Healthy_Elections/States/PA/distance_analysis/plots")
ggsave("pa_size_histogram.png", plot=hist_phillie_size, scale=1, width=9,height = 6,
units=c("in"),dpi=600)
####ok, now we want to get the pred prob plots, then we can be done
dist_vec <- seq(0,4,by=0.01)
poll_size_vec <- seq(0,25,by=0.5)
###now let's create the vars by county
phillie_vote_dist_df <- as.matrix(cbind(1,dist_vec,mean(phillie_vf2$poll_size_chg1000,na.rm=T),
1,1,0,2))
phillie_vote_size_df <- as.matrix(cbind(1,mean(phillie_vf2$dist_chg,na.rm=T),poll_size_vec,
1,1,0,2))
###create the mvr stuff
set.seed(4211)
phillie_mvrv <- mvrnorm(10000, mu=coef(phillie_voter_model),Sigma = vcov(phillie_voter_model))
set.seed(4211)
allegh_mvrv <- mvrnorm(10000, mu=coef(allegh_voter_model),Sigma = vcov(allegh_voter_model))
phillie_mvrv <- phillie_mvrv[,1:7]
allegh_mvrv <- allegh_mvrv[,1:7]
###now let's do mat multi
xb_phillie_dist <- phillie_vote_dist_df %*% t(phillie_mvrv)
xb_phillie_size <- phillie_vote_size_df %*% t(phillie_mvrv)
xb_allegh_dist <- allegh_vote_dist_df %*% t(allegh_mvrv)
xb_allegh_size <- allegh_vote_size_df %*% t(allegh_mvrv)
allegh_vote_dist_df <- as.matrix(cbind(1,dist_vec,mean(allegh_vf2$poll_size_chg1000,na.rm=T),
1,1,0,2))
allegh_vote_size_df <- as.matrix(cbind(1,mean(allegh_vf2$dist_chg,na.rm=T),poll_size_vec,
1,1,0,2))
xb_allegh_dist <- allegh_vote_dist_df %*% t(allegh_mvrv)
xb_allegh_size <- allegh_vote_size_df %*% t(allegh_mvrv)
##now collapsing
xb_phillie_dist <- apply(xb_phillie_dist, 1,quantile, probs=c(0.025,.5,.975))
xb_phillie_size <- apply(xb_phillie_size, 1,quantile, probs=c(0.025,.5,.975))
xb_allegh_dist <- apply(xb_allegh_dist, 1,quantile, probs=c(0.025,.5,.975))
xb_allegh_size <- apply(xb_allegh_size, 1,quantile, probs=c(0.025,.5,.975))
##start with vbm
##range of vals is
plot(dist_vec ,inv.logit(xb_phillie_dist[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Change in dist. to polls (mi)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Absentee voting probability given county and distance")
library(boot)
##start with vbm
##range of vals is
plot(dist_vec ,inv.logit(xb_phillie_dist[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Change in dist. to polls (mi)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Absentee voting probability given county and distance")
par(mfrow=c(1,1))
##start with vbm
##range of vals is
plot(dist_vec ,inv.logit(xb_phillie_dist[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Change in dist. to polls (mi)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Absentee voting probability given county and distance")
###line for Dane vbm
lines(dist_vec ,inv.logit(xb_allegh_dist[2,]), type="l",lty=1,col="purple",lwd=3)
#####CIs for mil vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_phillie_dist[1,]),
rev(inv.logit(xb_phillie_dist[3,]))),
col=alpha("lightblue",0.3),boder=NA)
#####CIs for dane vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_allegh_dist[1,]),
rev(inv.logit(xb_allegh_dist[3,]))),
col=alpha("purple",0.3),boder=NA)
##legends here
legend("topright",col=c("blue","purple"),lty=c(1,1),legend=c("Milwaukee county","Dane county"),bty="n",
cex=1.1,lwd=c(3,3))
##start with vbm
##range of vals is
plot(dist_vec ,inv.logit(xb_phillie_dist[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Change in dist. to polls (mi)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Absentee voting probability given county and distance")
###line for Dane vbm
lines(dist_vec ,inv.logit(xb_allegh_dist[2,]), type="l",lty=1,col="purple",lwd=3)
#####CIs for mil vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_phillie_dist[1,]),
rev(inv.logit(xb_phillie_dist[3,]))),
col=alpha("lightblue",0.3),boder=NA)
#####CIs for dane vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_allegh_dist[1,]),
rev(inv.logit(xb_allegh_dist[3,]))),
col=alpha("purple",0.3),boder=NA)
##legends here
legend("topright",col=c("blue","purple"),lty=c(1,1),legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1,lwd=c(3,3))
legend("topright",fill=c(alpha("lightblue",0.3),alpha("purple",0.3)),
legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1)
##start with vbm
##range of vals is
plot(dist_vec ,inv.logit(xb_phillie_dist[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Change in dist. to polls (mi)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Voting probability given changed distance to polls")
###line for Dane vbm
lines(dist_vec ,inv.logit(xb_allegh_dist[2,]), type="l",lty=1,col="purple",lwd=3)
#####CIs for mil vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_phillie_dist[1,]),
rev(inv.logit(xb_phillie_dist[3,]))),
col=alpha("lightblue",0.3),boder=NA)
#####CIs for dane vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_allegh_dist[1,]),
rev(inv.logit(xb_allegh_dist[3,]))),
col=alpha("purple",0.3),boder=NA)
##legends here
legend("topright",col=c("blue","purple"),lty=c(1,1),legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1,lwd=c(3,3))
legend("topright",fill=c(alpha("lightblue",0.3),alpha("purple",0.3)),
legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1)
jpeg("dist_vote_pa_pred_plot.jpeg",res=600, height=6,width=9,units="in")
par(mfrow=c(1,1))
##start with vbm
##range of vals is
plot(dist_vec ,inv.logit(xb_phillie_dist[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Change in dist. to polls (mi)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Voting probability given changed distance to polls")
###line for Dane vbm
lines(dist_vec ,inv.logit(xb_allegh_dist[2,]), type="l",lty=1,col="purple",lwd=3)
#####CIs for mil vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_phillie_dist[1,]),
rev(inv.logit(xb_phillie_dist[3,]))),
col=alpha("lightblue",0.3),boder=NA)
#####CIs for dane vbm
polygon(c(dist_vec,rev(dist_vec)),c(inv.logit(xb_allegh_dist[1,]),
rev(inv.logit(xb_allegh_dist[3,]))),
col=alpha("purple",0.3),boder=NA)
##legends here
legend("topright",col=c("blue","purple"),lty=c(1,1),legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1,lwd=c(3,3))
legend("topright",fill=c(alpha("lightblue",0.3),alpha("purple",0.3)),
legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1)
dev.off()
##start with vbm
plot(poll_size_vec ,inv.logit(xb_phillie_size[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Poll Size Chg. (per 1,000)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Voting probability given changed size of polls")
##Dane line
lines(poll_size_vec ,inv.logit(xb_allegh_size[2,]), type="l",lty=1,col="purple",lwd=3)
#####doing polygons here for Mil ed
polygon(c(poll_size_vec,rev(poll_size_vec)),c(inv.logit(xb_phillie_size[1,]),
rev(inv.logit(xb_phillie_size[3,]))),
col=alpha("blue",0.3),boder=NA)
###now election day dane CIs
polygon(c(poll_size_vec,rev(poll_size_vec)),c(inv.logit(xb_allegh_size[1,]),
rev(inv.logit(xb_allegh_size[3,]))),
col=alpha("purple",0.3),boder=NA)
###legend here
legend("topright",col=c("blue","purple"),lty=c(1,1),legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1,lwd=c(3,3))
legend("topright",fill=c(alpha("lightblue",0.3),alpha("purple",0.3)),
legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1)
jpeg("size_vote_pa_pred_plot.jpeg",res=600, height=6,width=9,units="in")
##start with vbm
plot(poll_size_vec ,inv.logit(xb_phillie_size[2,]), type="l",lty=1,col="blue",ylim=c(0,0.4),
xlab="Poll Size Chg. (per 1,000)", ylab="Probability of voting",cex.lab=1.2,lwd=3,
main="Voting probability given changed size of polls")
##Dane line
lines(poll_size_vec ,inv.logit(xb_allegh_size[2,]), type="l",lty=1,col="purple",lwd=3)
#####doing polygons here for Mil ed
polygon(c(poll_size_vec,rev(poll_size_vec)),c(inv.logit(xb_phillie_size[1,]),
rev(inv.logit(xb_phillie_size[3,]))),
col=alpha("blue",0.3),boder=NA)
###now election day dane CIs
polygon(c(poll_size_vec,rev(poll_size_vec)),c(inv.logit(xb_allegh_size[1,]),
rev(inv.logit(xb_allegh_size[3,]))),
col=alpha("purple",0.3),boder=NA)
###legend here
legend("topright",col=c("blue","purple"),lty=c(1,1),legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1,lwd=c(3,3))
legend("topright",fill=c(alpha("lightblue",0.3),alpha("purple",0.3)),
legend=c("Philadelphia county","Allegheny county"),bty="n",
cex=1.1)
dev.off()
pa_starg_vote <- stargazer::stargazer(list(phillie_voter_model,allegh_voter_model),type="html",
out="stargazer_pa_vote_model.html",
covariate.labels = c("Dist. Chg.","Poll Size Chg. (per 1,000)","Prob. White",
"Democrat","Republican", "Prior Elec. #"),
intercept.bottom = T,column.labels = c("Philadelphia","Allegheny"),
ci=T,no.space = T,
single.row = F, omit=c("full_addr_open" ,"poll_latlong"),
add.lines = list(c("Fixed Effects","Yes","Yes"),
c("Total R-squared",mcfadden_null,mcfadden_null_allegh),
c("Within R-squared",mcfadden_fe,mcfadden_fe_allegh)),
dep.var.labels=c("Philadelphia","Allegheny"),align = T)
inv.logit(xb_phillie_dist[2,])
dist_vec
inv.logit(xb_phillie_dist[2,])[100]-inv.logit(xb_phillie_dist[2,])[1]
inv.logit(xb_allegh_dist[2,])[100]-inv.logit(xb_allegh_dist[2,])[1]
poll_size_vec
inv.logit(xb_allegh_dist[2,])[100]-inv.logit(xb_allegh_dist[2,])[21]-inv.logit(xb_allegh_dist[2,])[100]-inv.logit(xb_allegh_dist[2,])[1]
inv.logit(xb_allegh_dist[2,])[21]-inv.logit(xb_allegh_dist[2,])[21]-inv.logit(xb_allegh_dist[2,])[1]
inv.logit(xb_phillie_size[2,])[21]-inv.logit(xb_phillie_size[2,])[1]
inv.logit(xb_allegh_size[2,])[21]-inv.logit(xb_allegh_size[2,])[1]
library(readxl)
setwd("C:/Users/johna/Dropbox (Curiel Analytx)/Healthy_Elections/States/WI/Absentee files")
list.files()
temp_abs <- read_xlsx("absentee20200921.xlsx")
View(temp_abs)
names(temp_abs)
sort(unique(temp_abs$`Application Type`))
sort(unique(temp_abs$`Application Source`))
sort(unique(temp_abs$`Ballot Reason Type`))
table((temp_abs$`Ballot Reason Type`))
sort(unique(temp_abs$`Ballot Delivery Method`))
sort(unique(temp_abs$`Ballot Status Reason`))
###read in precinct data
temp_prec <- read.csv("C:/Users/johna/Dropbox (Curiel Analytx)/voterfile/2016-precinct-president.csv")
table(temp_prec$state_postal)
#########################################################################################
################## The Voter intention survey cleaner ##################################
##################################################################################
library(extrafont)
library(showtext)
font_import("F:/MEDSL/blogs/styrene_b")
library(dplyr)
library(BAMMtools)
library(rgeos)
library(broom)
library(stringi)
library(stringr)
library(tidyverse)
library(geojsonio)
library(RColorBrewer)
library(rgdal)
library(srvyr)
library(haven)
###################################################
##function to convert long to wide, multiple values
myspread <- function(df, key, value) {
# quote key
keyq <- rlang::enquo(key)
# break value vector into quotes
valueq <- rlang::enquo(value)
s <- rlang::quos(!!valueq)
df %>% gather(variable, value, !!!s) %>%
unite(temp, !!keyq, variable) %>%
spread(temp, value)
}
####theme files
medsl_brands <- c("#3791FF","#59CBF5","#C0BA79","#F6573E","#156DD0","#C72654","#FF6878")
theme_medsl2gen <- theme(title = element_text(size = rel(1.2), family="Styrene B"),
plot.caption = element_text(hjust=0),panel.grid.minor = element_blank())
###there are 14 breaks on the x axis. we will want to make it so that they are the same.
medsl_purple <- c("#DDDBFB", "#B1AAFB","#7D76C7","#635E99",  "#4E4A81")
###create auto caption
caption_date2 <- paste0("Data source: MIT Voter Intention Survey \nGraph Source: MIT Elections Data and Science Lab\nGraph date:",
sep=" ", format(Sys.Date(),format="%m/%d/%Y"))
###############3
setwd("F:/MEDSL/healthy_elections/voteintention")
list.files()
vi_survey <- read.csv("fallsurvey1.CSV")
###############3
setwd("C:/Users/johna/Dropbox (Curiel Analytx)/voterfile")
list.files()
###############3
setwd("C:/Users/johna/OneDrive/Documents/GitHub/healthy_elections/voteintention")
list.files()
vi_survey <- read.csv("fallsurvey1.CSV")
View(vi_survey)
names(vi_survey)
####we will probably want a simple design by age, race, and party. We can do this with the vf without too much
#issue
vi_survey$vbm_use <- 0
table(vi_survey$q4)
str(vi_survey$q4)
vi_survey$vbm_use[vi_survey$q4==3] <- 1
table(vi_survey$birthyr)
vi_survey$age <- 2020 - vi_survey$birthyr
names(vi_survey)
vi_survey$age2 <- vi_survey$age^2
table(vi_survey$pid7)
vi_survey$democrat <- 0
vi_survey$democrat[vi_survey$pid7 < 4] <- 1
vi_survey$gop <- 0
vi_survey$gop[vi_survey$pid7 > 4] <- 1
View(vi_survey)
vi_survey$state_fip <- str_pad(vi_survey$inputstate,width=2,pad="0",side="left")
bayes_vbm_all <- brm(vbm_use ~ (1|gender) + (1|race) + age + age2 + (1|state_fip), data=vi_survey,
family=bernoulli)
library(broom)
library(brm)
?brm
library(broom)
library(brms)
install.packages("brms")
library(brms)
bayes_vbm_all <- brm(vbm_use ~ (1|gender) + (1|race) + age + age2 + (1|state_fip), data=vi_survey,
family=bernoulli)
library(brms)
bayes_vbm_all <- brm(vbm_use ~ (1|gender) + (1|race) + age + age2 + (1|state_fip), data=vi_survey,
family=bernoulli)
summary(bayes_vbm_all)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
