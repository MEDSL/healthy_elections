###############################################################################################
############### MEDSL Healthy Elections COVID Rate CleanR #################################
##########################################################################################
library(ggplot2)
library(ggalt)
library(grid)
library(dplyr)
library(stringr)
library(BAMMtools) #pkg to create nat jenks breaks
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
library(extrafont)#these allow you to read in the non-default fonts
library(showtext)
font_import("/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/general/fonts/styrene_b")  #specify font path here
windowsFonts(A = windowsFont("styrene_b"))
options(stringsAsFactors = F)
wd <- "/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/GA" # set working directory
setwd(wd)
covid_cases <- read.csv("/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/general/outside_data/us-counties-nyt.csv") # read in the COVID data from the NYT
covid_cases <- subset(covid_cases, state=="Georgia") ###subset the data to equal the state of interest
#The fields are : date, county (title case), state (title case), fips (st_fips+county_fips), cases, and deaths.
#note that the deaths are excess deaths above the distribution of deaths given a model that the NYT has
View(covid_cases)
View(covid_cases)
###############################################################################################
############### MEDSL Healthy Elections COVID Rate CleanR #################################
##########################################################################################
library(ggplot2)
library(ggalt)
library(grid)
library(dplyr)
library(stringr)
library(BAMMtools) #pkg to create nat jenks breaks
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
library(extrafont)#these allow you to read in the non-default fonts
library(showtext)
font_import("/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/general/fonts/styrene_b")  #specify font path here
windowsFonts(A = windowsFont("styrene_b"))
options(stringsAsFactors = F)
wd <- "/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/GA" # set working directory
setwd(wd)
covid_cases <- read.csv("/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/general/outside_data/us-counties-nyt.csv") # read in the COVID data from the NYT
covid_cases <- subset(covid_cases, state=="Georgia") ###subset the data to equal the state of interest
#The fields are : date, county (title case), state (title case), fips (st_fips+county_fips), cases, and deaths.
#note that the deaths are excess deaths above the distribution of deaths given a model that the NYT has
#### the covid data set is formatted as %y-%m-%d , i.e. 2020-04-21 . Can subset via the following example
#covid_primary_date <- subset(covid_cases, date=="2020-04-03")
covid_primary_datePPP <- subset(covid_cases, date=="2020-03-24") # set the date to the day of the primary to run a scatterplot of some sort , then merge onto
covid_primary_dateGP <- subset(covid_cases, date=="2020-05-19") # set the date to the day of the primary to run a scatterplot of some sort , then merge onto
covid_primary_dateGP2 <- subset(covid_cases, date=="2020-06-09") # set the date to the day of the primary to run a scatterplot of some sort , then merge onto
#path to medsl colors: http://www.mit.edu/~medsl/brand/charts/index.html ; use this to choose colors of interest
####general non-grouped plot
ts_covid_all <- covid_cases %>% group_by(date) %>% dplyr::summarize(total_cases = sum(cases,na.rm=T),total_deaths=sum(deaths,na.rm=T))
ts_covid_all$Date <- as.Date(ts_covid_all$date)
ts_covid_all <- ts_covid_all %>% mutate(lag_cases=lag(total_cases))
ts_covid_all$new_cases <- ts_covid_all$total_cases - ts_covid_all$lag_cases
sort(unique(ts_covid_all$date))
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[64]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[77]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[38]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Public VBM \nNotice", x=0.2,  y=0.6, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
grob_prim <- grobTree(textGrob("Primary", x=0.5,  y=0.7, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
grob2weeks <-   grobTree(textGrob("2 Weeks \npost-primary", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all <- cases_plot_all + theme(title = element_text(size = rel(1.4), family="Styrene B")) #example plot of new cases
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[64]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[77]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[38]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[77]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[38]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Public VBM \nNotice", x=0.2,  y=0.6, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
grob_prim <- grobTree(textGrob("Primary", x=0.5,  y=0.7, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
grob2weeks <-   grobTree(textGrob("2 Weeks \npost-primary", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
View(ts_covid_all)
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.2,  y=0.6, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.5,  y=0.7, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined Primary Date", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=12, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.2,  y=0.6, hjust=-2,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.5,  y=0.7, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.2,  y=0.6, hjust=-2,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.5,  y=0.7, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.2,  y=0.6, hjust=0.5,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.5,  y=0.7, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.2,  y=0.1, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.9,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.1,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.9,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.1,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.8,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.1,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.8,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- cases_plot_all + theme(title = element_text(size = rel(1.4), family="Styrene B")) #example plot of new cases
###############################################################################################
############### MEDSL Healthy Elections COVID Rate CleanR #################################
##########################################################################################
library(ggplot2)
library(ggalt)
library(grid)
library(dplyr)
library(stringr)
library(BAMMtools) #pkg to create nat jenks breaks
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
library(extrafont)#these allow you to read in the non-default fonts
library(showtext)
font_import("/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/general/fonts/styrene_b")  #specify font path here
windowsFonts(A = windowsFont("styrene_b"))
options(stringsAsFactors = F)
wd <- "/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/GA" # set working directory
setwd(wd)
covid_cases <- read.csv("/Users/cantstopkevin/Documents/HarvardDesktop/MEDSL/github/healthy_elections/general/outside_data/us-counties-nyt.csv") # read in the COVID data from the NYT
covid_cases <- subset(covid_cases, state=="Georgia") ###subset the data to equal the state of interest
#The fields are : date, county (title case), state (title case), fips (st_fips+county_fips), cases, and deaths.
#note that the deaths are excess deaths above the distribution of deaths given a model that the NYT has
#### the covid data set is formatted as %y-%m-%d , i.e. 2020-04-21 . Can subset via the following example
#covid_primary_date <- subset(covid_cases, date=="2020-04-03")
covid_primary_datePPP <- subset(covid_cases, date=="2020-03-24") # set the date to the day of the primary to run a scatterplot of some sort , then merge onto
covid_primary_dateGP <- subset(covid_cases, date=="2020-05-19") # set the date to the day of the primary to run a scatterplot of some sort , then merge onto
covid_primary_dateGP2 <- subset(covid_cases, date=="2020-06-09") # set the date to the day of the primary to run a scatterplot of some sort , then merge onto
#path to medsl colors: http://www.mit.edu/~medsl/brand/charts/index.html ; use this to choose colors of interest
####general non-grouped plot
ts_covid_all <- covid_cases %>% group_by(date) %>% dplyr::summarize(total_cases = sum(cases,na.rm=T),total_deaths=sum(deaths,na.rm=T))
ts_covid_all$Date <- as.Date(ts_covid_all$date)
ts_covid_all <- ts_covid_all %>% mutate(lag_cases=lag(total_cases))
ts_covid_all$new_cases <- ts_covid_all$total_cases - ts_covid_all$lag_cases
sort(unique(ts_covid_all$date))
cases_plot_all <- ggplot(ts_covid_all, aes(x = Date, y = new_cases)) +
geom_line(color="#156DD0", size=1)+
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[79]), color="#37C256" ), linetype=4, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[100]), color="#C0BA79" ), linetype=5, show.legend = F) +
geom_vline(aes(xintercept=as.numeric(sort(unique(ts_covid_all$Date))[23]), color="#F6573E" ), linetype=2, show.legend = F)
cases_plot_all
grob_start <- grobTree(textGrob("Original PPP Date", x=0.1,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob_prim <- grobTree(textGrob("Original General Primary", x=0.6,  y=0.8, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2weeks <-   grobTree(textGrob("Actual Combined \nPrimary Date", x=0.8,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=8, fontface="bold")))
cases_plot_all <- cases_plot_all +  annotation_custom(grob_start) +  annotation_custom(grob_prim) + annotation_custom(grob2weeks) +
labs( title= "COVID-19 Cases, Georgia 2020 Primary Elections", y="New Cases") + theme_minimal()
cases_plot_all
cases_plot_all <- cases_plot_all + theme(title = element_text(size = rel(1.4), family="Styrene B")) #example plot of new cases
ggsave("covid_GA_plot.jpg", plot = cases_plot_all, scale = 1,
width = 9, height = 6, units = c("in"), dpi = 600)
